********************************************************************************
product = Open Liberty 19.0.0.6 (wlp-1.0.29.cl190620190617-1530)
wlp.install.dir = /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/
java.home = /Library/Java/JavaVirtualMachines/jdk-12.0.1.jdk/Contents/Home
java.version = 12.0.1
java.runtime = Java(TM) SE Runtime Environment (12.0.1+12)
os = Mac OS X (10.14.5; x86_64) (en_CN)
process = 61195@yunfanchens-mbp.cn.ibm.com
trace.specification = *=info:com.ibm.ws.microprofile.health.*=all
********************************************************************************
[7/5/19, 15:04:58:538 CST] 00000018 id=00000000 com.ibm.ws.logging.internal.TraceSpecification               I TRAS0018I: The trace state has been changed. The new trace state is *=info:com.ibm.ws.microprofile.health.*=all.
[7/5/19, 15:04:58:797 CST] 00000001 id=00000000 com.ibm.ws.kernel.launch.internal.FrameworkManager           I CWWKE0002I: The kernel started after 2.381 seconds
[7/5/19, 15:04:58:962 CST] 0000001e id=00000000 com.ibm.ws.kernel.feature.internal.FeatureManager            I CWWKF0007I: Feature update started.
[7/5/19, 15:04:59:929 CST] 00000016 id=00000000 com.ibm.ws.security.ready.internal.SecurityReadyServiceImpl  I CWWKS0007I: The security service is starting...
[7/5/19, 15:05:00:176 CST] 00000016 id=00000000 com.ibm.ws.app.manager.internal.monitor.DropinMonitor        A CWWKZ0058I: Monitoring dropins for applications.
[7/5/19, 15:05:00:420 CST] 00000025 id=00000000 com.ibm.ws.tcpchannel.internal.TCPChannel                    I CWWKO0219I: TCP Channel defaultHttpEndpoint has been started and is now listening for requests on host *  (IPv6) port 9080.
[7/5/19, 15:05:00:565 CST] 00000016 id=00000000 com.ibm.ws.cache.ServerCache                                 I DYNA1001I: WebSphere Dynamic Cache instance named baseCache initialized successfully.
[7/5/19, 15:05:00:567 CST] 00000016 id=00000000 com.ibm.ws.cache.ServerCache                                 I DYNA1071I: The cache provider default is being used.
[7/5/19, 15:05:00:568 CST] 00000016 id=00000000 com.ibm.ws.cache.CacheServiceImpl                            I DYNA1056I: Dynamic Cache (object cache) initialized successfully.
[7/5/19, 15:05:00:650 CST] 00000018 id=00000000 com.ibm.ws.ssl.config.WSKeyStore                             I CWPKI0802I: Creating the SSL certificate. This may take a few seconds.
[7/5/19, 15:05:00:665 CST] 00000029 id=00000000 com.ibm.ws.security.token.ltpa.internal.LTPAKeyInfoManager   I CWWKS4103I: Creating the LTPA keys. This may take a few seconds.
[7/5/19, 15:05:00:687 CST] 00000016 id=00000000 ibm.ws.security.authentication.internal.jaas.JAASServiceImpl I CWWKS1123I: The collective authentication plugin with class name NullCollectiveAuthenticationPlugin has been activated. 
[7/5/19, 15:05:00:957 CST] 00000016 id=00000000 SessionMgrComponentImpl                                      I initialize SESN8501I: The session manager did not find a persistent storage location; HttpSession objects will be stored in the local application server's memory.
[7/5/19, 15:05:01:089 CST] 00000016 id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl > activate Entry 
[7/5/19, 15:05:01:092 CST] 00000016 id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl < activate Exit 
[7/5/19, 15:05:01:365 CST] 00000029 id=00000000 com.ibm.ws.security.token.ltpa.internal.LTPAKeyInfoManager   A CWWKS4104A: LTPA keys created in 0.700 seconds. LTPA key file: /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/resources/security/ltpa.keys
[7/5/19, 15:05:01:369 CST] 00000029 id=00000000 com.ibm.ws.security.ready.internal.SecurityReadyServiceImpl  I CWWKS0008I: The security service is ready.
[7/5/19, 15:05:01:371 CST] 00000029 id=00000000 com.ibm.ws.security.token.ltpa.internal.LTPAKeyCreateTask    I CWWKS4105I: LTPA configuration is ready after 0.708 seconds.
[7/5/19, 15:05:01:581 CST] 00000021 id=00000000 com.ibm.ws.app.manager.AppMessageHelper                      I CWWKZ0018I: Starting application getting-started.
[7/5/19, 15:05:01:583 CST] 00000021 id=00000000 bm.ws.app.manager.war.internal.WARDeployedAppInfoFactoryImpl I CWWKZ0134I: The getting-started application is using the loose application definition at the /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/apps/getting-started.war.xml location.
[7/5/19, 15:05:01:767 CST] 00000033 id=00000000 com.ibm.ws.webcontainer.osgi.webapp.WebGroup                 I SRVE0169I: Loading Web Module: PrivateMicroProfileMetrics.
[7/5/19, 15:05:01:767 CST] 00000032 id=00000000 com.ibm.ws.webcontainer.osgi.webapp.WebGroup                 I SRVE0169I: Loading Web Module: ibm/api.
[7/5/19, 15:05:01:767 CST] 0000001f id=00000000 com.ibm.ws.webcontainer.osgi.webapp.WebGroup                 I SRVE0169I: Loading Web Module: health.
[7/5/19, 15:05:01:770 CST] 00000033 id=00000000 com.ibm.ws.webcontainer.osgi.DynamicVirtualHost              I addWebApplication SRVE0250I: Web Module PrivateMicroProfileMetrics has been bound to default_host.
[7/5/19, 15:05:01:770 CST] 0000001f id=00000000 com.ibm.ws.webcontainer.osgi.DynamicVirtualHost              I addWebApplication SRVE0250I: Web Module health has been bound to default_host.
[7/5/19, 15:05:01:770 CST] 00000032 id=00000000 com.ibm.ws.webcontainer.osgi.DynamicVirtualHost              I addWebApplication SRVE0250I: Web Module ibm/api has been bound to default_host.
[7/5/19, 15:05:01:772 CST] 00000033 id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0016I: Web application available (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/metrics/
[7/5/19, 15:05:01:774 CST] 00000032 id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0016I: Web application available (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/ibm/api/
[7/5/19, 15:05:01:774 CST] 0000001f id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0016I: Web application available (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/health/
[7/5/19, 15:05:01:814 CST] 00000025 id=00000000 SessionContextRegistryImpl                                   I getSessionContext SESN0176I: A new session context will be created for application key default_host/metrics
[7/5/19, 15:05:01:814 CST] 0000002b id=00000000 SessionContextRegistryImpl                                   I getSessionContext SESN0176I: A new session context will be created for application key default_host/ibm/api
[7/5/19, 15:05:01:814 CST] 0000002a id=00000000 SessionContextRegistryImpl                                   I getSessionContext SESN0176I: A new session context will be created for application key default_host/health
[7/5/19, 15:05:01:825 CST] 00000021 id=00000000 org.jboss.weld.bootstrap.WeldStartup                         I <clinit> WELD-000900: 3.1.1 (Final)
[7/5/19, 15:05:01:826 CST] 00000025 id=00000000 IDGeneratorImpl                                              I IDGeneratorImpl SESN0172I: The session manager is using the Java default SecureRandom implementation for session ID generation.
[7/5/19, 15:05:01:836 CST] 0000002a id=00000000 IDGeneratorImpl                                              I IDGeneratorImpl SESN0172I: The session manager is using the Java default SecureRandom implementation for session ID generation.
[7/5/19, 15:05:01:837 CST] 0000002b id=00000000 IDGeneratorImpl                                              I IDGeneratorImpl SESN0172I: The session manager is using the Java default SecureRandom implementation for session ID generation.
[7/5/19, 15:05:01:851 CST] 0000002b id=00000000 com.ibm.ws.cache.CacheServiceImpl                            I DYNA1056I: Dynamic Cache (object cache) initialized successfully.
[7/5/19, 15:05:01:892 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > activate Entry  
                                                                                                               org.apache.felix.scr.impl.manager.ComponentContextImpl@69b39c74
                                                                                                               {service.vendor=IBM, component.name=com.ibm.ws.microprofile.health.internal.AppTrackerImpl, component.id=305}
[7/5/19, 15:05:01:892 CST] 0000002b id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 AppTrackerImpl is activated
[7/5/19, 15:05:01:892 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < activate Exit 
[7/5/19, 15:05:01:902 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > onStartup Entry  
                                                                                                               null
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@24b25586[com.ibm.ws.microprofile.metrics.private#com.ibm.ws.microprofile.metrics.private]
[7/5/19, 15:05:01:903 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > setAppModuleNames Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@24b25586[com.ibm.ws.microprofile.metrics.private#com.ibm.ws.microprofile.metrics.private]
[7/5/19, 15:05:01:903 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > isOsgiApp Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@24b25586[com.ibm.ws.microprofile.metrics.private#com.ibm.ws.microprofile.metrics.private]
[7/5/19, 15:05:01:903 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > onStartup Entry  
                                                                                                               [interface org.eclipse.microprofile.health.HealthCheck]
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@7a1ea625[com.ibm.ws.microprofile.health#com.ibm.ws.microprofile.health]
[7/5/19, 15:05:01:903 CST] 00000025 id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Servet context attr for key = osgi-bundlecontext, = org.eclipse.osgi.internal.framework.BundleContextImpl@143b8b18
[7/5/19, 15:05:01:904 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > setAppModuleNames Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@7a1ea625[com.ibm.ws.microprofile.health#com.ibm.ws.microprofile.health]
[7/5/19, 15:05:01:904 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < isOsgiApp Exit  
                                                                                                               true
[7/5/19, 15:05:01:904 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > isOsgiApp Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@7a1ea625[com.ibm.ws.microprofile.health#com.ibm.ws.microprofile.health]
[7/5/19, 15:05:01:904 CST] 00000025 id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Detected OSGi app, so won't track for health check; appName =  
                                                                                                               com.ibm.ws.microprofile.metrics.private
[7/5/19, 15:05:01:904 CST] 0000002a id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Servet context attr for key = osgi-bundlecontext, = org.eclipse.osgi.internal.framework.BundleContextImpl@4c667db9
[7/5/19, 15:05:01:904 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < setAppModuleNames Exit  
                                                                                                               null
[7/5/19, 15:05:01:904 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < isOsgiApp Exit  
                                                                                                               true
[7/5/19, 15:05:01:904 CST] 00000025 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < onStartup Exit 
[7/5/19, 15:05:01:904 CST] 0000002a id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Detected OSGi app, so won't track for health check; appName =  
                                                                                                               com.ibm.ws.microprofile.health
[7/5/19, 15:05:01:904 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < setAppModuleNames Exit  
                                                                                                               null
[7/5/19, 15:05:01:904 CST] 0000002a id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < onStartup Exit 
[7/5/19, 15:05:01:904 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > onStartup Entry  
                                                                                                               null
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@4c0e4167[com.ibm.ws.rest.handler#com.ibm.ws.rest.handler]
[7/5/19, 15:05:01:905 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > setAppModuleNames Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@4c0e4167[com.ibm.ws.rest.handler#com.ibm.ws.rest.handler]
[7/5/19, 15:05:01:905 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > isOsgiApp Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@4c0e4167[com.ibm.ws.rest.handler#com.ibm.ws.rest.handler]
[7/5/19, 15:05:01:905 CST] 0000002b id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Servet context attr for key = osgi-bundlecontext, = org.eclipse.osgi.internal.framework.BundleContextImpl@260a524f
[7/5/19, 15:05:01:905 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < isOsgiApp Exit  
                                                                                                               true
[7/5/19, 15:05:01:905 CST] 0000002b id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Detected OSGi app, so won't track for health check; appName =  
                                                                                                               com.ibm.ws.rest.handler
[7/5/19, 15:05:01:905 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < setAppModuleNames Exit  
                                                                                                               null
[7/5/19, 15:05:01:905 CST] 0000002b id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < onStartup Exit 
[7/5/19, 15:05:01:970 CST] 00000025 id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I init SRVE0242I: [com.ibm.ws.microprofile.metrics.private] [/metrics] [PrivateMetricsRESTProxyServlet]: Initialization successful.
[7/5/19, 15:05:02:008 CST] 0000002d id=00000000 com.ibm.ws.webcontainer.osgi.mbeans.PluginGenerator          I SRVE9103I: A configuration file for a web server plugin was automatically generated for this server at /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/logs/state/plugin-cfg.xml.
[7/5/19, 15:05:02:501 CST] 00000021 id=00000000 com.ibm.ws.webcontainer.osgi.webapp.WebGroup                 I SRVE0169I: Loading Web Module: Liberty Project.
[7/5/19, 15:05:02:502 CST] 00000021 id=00000000 com.ibm.ws.webcontainer.osgi.DynamicVirtualHost              I addWebApplication SRVE0250I: Web Module Liberty Project has been bound to default_host.
[7/5/19, 15:05:02:502 CST] 00000021 id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0016I: Web application available (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/
[7/5/19, 15:05:02:504 CST] 00000021 id=00000000 com.ibm.ws.app.manager.AppMessageHelper                      A CWWKZ0001I: Application getting-started started in 0.923 seconds.
[7/5/19, 15:05:02:506 CST] 00000033 id=00000000 SessionContextRegistryImpl                                   I getSessionContext SESN0176I: A new session context will be created for application key default_host/
[7/5/19, 15:05:02:507 CST] 00000033 id=00000000 IDGeneratorImpl                                              I IDGeneratorImpl SESN0172I: The session manager is using the Java default SecureRandom implementation for session ID generation.
[7/5/19, 15:05:02:523 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > onStartup Entry  
                                                                                                               [interface org.eclipse.microprofile.health.HealthCheck, class io.openliberty.sample.system.SystemHealth]
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@3887ad18[getting-started#getting-started.war]
[7/5/19, 15:05:02:523 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > setAppModuleNames Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@3887ad18[getting-started#getting-started.war]
[7/5/19, 15:05:02:523 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > isOsgiApp Entry  
                                                                                                               com.ibm.ws.webcontainer40.osgi.webapp.WebApp40@3887ad18[getting-started#getting-started.war]
[7/5/19, 15:05:02:523 CST] 00000033 id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 Servet context attr for key = osgi-bundlecontext, = null
[7/5/19, 15:05:02:523 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < isOsgiApp Exit  
                                                                                                               false
[7/5/19, 15:05:02:523 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > addAppModuleNames Entry  
                                                                                                               getting-started
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:02:524 CST] 00000033 id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 addAppModuleNames(): modules added = {getting-started=[getting-started.war]} for app: getting-started
[7/5/19, 15:05:02:562 CST] 00000033 id=00000000 ws.microprofile.health.internal.AppTrackerImpl$AppModuleName > <init> Entry 
[7/5/19, 15:05:02:563 CST] 00000033 id=008114f5 ws.microprofile.health.internal.AppTrackerImpl$AppModuleName < <init> Exit  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl$AppModuleName@8114f5
[7/5/19, 15:05:02:564 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < addAppModuleNames Exit  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl$AppModuleName@8114f5
[7/5/19, 15:05:02:564 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < setAppModuleNames Exit  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl$AppModuleName@8114f5
[7/5/19, 15:05:02:612 CST] 00000033 id=00000000 icroprofile.health.internal.AppTrackerServletContextListener > <init> Entry  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl$AppModuleName@8114f5
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl@78c080d5
[7/5/19, 15:05:02:613 CST] 00000033 id=6384d557 icroprofile.health.internal.AppTrackerServletContextListener < <init> Exit  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerServletContextListener@6384d557
[7/5/19, 15:05:02:613 CST] 00000033 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < onStartup Exit 
[7/5/19, 15:05:02:614 CST] 00000031 id=00000000 com.ibm.ws.webcontainer.osgi.mbeans.PluginGenerator          I SRVE9103I: A configuration file for a web server plugin was automatically generated for this server at /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/logs/state/plugin-cfg.xml.
[7/5/19, 15:05:02:624 CST] 00000033 id=6384d557 icroprofile.health.internal.AppTrackerServletContextListener > contextInitialized Entry  
                                                                                                               javax.servlet.ServletContextEvent[source=com.ibm.ws.webcontainer40.facade.ServletContextFacade40@622127bf]
[7/5/19, 15:05:02:624 CST] 00000033 id=6384d557 icroprofile.health.internal.AppTrackerServletContextListener < contextInitialized Exit 
[7/5/19, 15:05:02:654 CST] 0000001e id=00000000 com.ibm.ws.kernel.feature.internal.FeatureManager            A CWWKF0012I: The server installed the following features: [cdi-2.0, distributedMap-1.0, jaxrs-2.1, jaxrsClient-2.1, jndi-1.0, json-1.0, jsonp-1.1, mpConfig-1.3, mpHealth-1.0, mpMetrics-1.1, servlet-4.0, ssl-1.0].
[7/5/19, 15:05:02:654 CST] 0000001e id=00000000 com.ibm.ws.kernel.feature.internal.FeatureManager            I CWWKF0008I: Feature update completed in 3.858 seconds.
[7/5/19, 15:05:02:655 CST] 0000001e id=00000000 com.ibm.ws.kernel.feature.internal.FeatureManager            A CWWKF0011I: The GettingStartedServer server is ready to run a smarter planet. The GettingStartedServer server started in 6.240 seconds.
[7/5/19, 15:05:03:691 CST] 00000018 id=00000000 com.ibm.ws.ssl.config.WSKeyStore                             A CWPKI0803A: SSL certificate created in 3.041 seconds. SSL key file: /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/resources/security/key.p12
[7/5/19, 15:05:03:694 CST] 00000018 id=00000000 com.ibm.ws.ssl.config.WSKeyStore                             I Successfully loaded default keystore: /Users/yunfanchen/Documents/GitHub/Liberty/finish/target/liberty/wlp/usr/servers/GettingStartedServer/resources/security/key.p12 of type: PKCS12
[7/5/19, 15:05:03:789 CST] 00000033 id=00000000 com.ibm.ws.tcpchannel.internal.TCPChannel                    I CWWKO0219I: TCP Channel defaultHttpEndpoint-ssl has been started and is now listening for requests on host *  (IPv6) port 9443.
[7/5/19, 15:05:06:807 CST] 00000032 id=00000000 .apache.cxf.cxf.core.3.2:1.0.29.cl190620190617-1530(id=178)] I Setting the server's publish address to be /system/
[7/5/19, 15:05:06:874 CST] 00000032 id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I init SRVE0242I: [getting-started] [/] [io.openliberty.sample.system.SystemApplication]: Initialization successful.
[7/5/19, 15:05:07:231 CST] 0000001e id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I init SRVE0242I: [com.ibm.ws.microprofile.health] [/health] [HealthCheckServlet]: Initialization successful.
[7/5/19, 15:05:07:232 CST] 0000001e id=773ac4d2 m.ws.microprofile.health.internal.servlet.HealthCheckServlet > service Entry  
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletRequest40@5b2a577a
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletResponse40@49b327f1
[7/5/19, 15:05:07:232 CST] 0000001e id=773ac4d2 m.ws.microprofile.health.internal.servlet.HealthCheckServlet > findHealthService Entry  
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletRequest40@5b2a577a
[7/5/19, 15:05:07:289 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > setClassLoaderContextProvider Entry  
                                                                                                               com.ibm.ws.classloader.context.internal.ClassloaderContextProviderImpl@613f4d48
[7/5/19, 15:05:07:289 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < setClassLoaderContextProvider Exit 
[7/5/19, 15:05:07:289 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > setClassLoaderIdentifierService Entry  
                                                                                                               com.ibm.ws.classloading.internal.ClassLoadingServiceImpl@7f0196ce
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < setClassLoaderIdentifierService Exit 
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > setContextService Entry  
                                                                                                               com.ibm.ws.context.service.serializable.ThreadContextManager@2aaeb4ab
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < setContextService Exit 
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > setJeeMetaDataContextProvider Entry  
                                                                                                               com.ibm.ws.javaee.metadata.context.internal.JEEMetadataContextProviderImpl@31e0f9bb
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < setJeeMetaDataContextProvider Exit 
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > setMetaDataIdentifierService Entry  
                                                                                                               com.ibm.ws.container.service.metadata.internal.MetaDataServiceImpl@711e5d9e
[7/5/19, 15:05:07:290 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < setMetaDataIdentifierService Exit 
[7/5/19, 15:05:07:332 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl > <init> Entry 
[7/5/19, 15:05:07:333 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl < <init> Exit  
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl@1070d1bb
[7/5/19, 15:05:07:373 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl > <init> ENTRY
[7/5/19, 15:05:07:377 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl < <init> RETURN com.ibm.ws.microprofile.health.services.impl.HealthExecutorImpl@191a7028
[7/5/19, 15:05:07:377 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl > setAppModuleContextService ENTRY com.ibm.ws.microprofile.health.services.impl.AppModuleContextService@359ea415
[7/5/19, 15:05:07:377 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl < setAppModuleContextService RETURN
[7/5/19, 15:05:07:377 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl > setHealthCheckApplicationBeanInvoker ENTRY com.ibm.ws.microprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl@1070d1bb
[7/5/19, 15:05:07:378 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl < setHealthCheckApplicationBeanInvoker RETURN
[7/5/19, 15:05:07:378 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl > setJ2EENameFactory ENTRY com.ibm.ws.container.service.metadata.internal.J2EENameFactoryImpl@61548c12
[7/5/19, 15:05:07:378 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl < setJ2EENameFactory RETURN
[7/5/19, 15:05:07:420 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > setAppTracker Entry  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl@78c080d5
[7/5/19, 15:05:07:421 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < setAppTracker Exit 
[7/5/19, 15:05:07:421 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > setHealthExecutor Entry  
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthExecutorImpl@191a7028
[7/5/19, 15:05:07:421 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < setHealthExecutor Exit 
[7/5/19, 15:05:07:422 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > activate Entry  
                                                                                                               org.apache.felix.scr.impl.manager.ComponentContextImpl@3d4df2df
                                                                                                               {service.vendor=IBM, component.name=com.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl, component.id=306}
[7/5/19, 15:05:07:422 CST] 0000001e id=00000000 m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl 3 HealthCheckServiceImpl is activated
[7/5/19, 15:05:07:422 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < activate Exit 
[7/5/19, 15:05:07:422 CST] 0000001e id=773ac4d2 m.ws.microprofile.health.internal.servlet.HealthCheckServlet < findHealthService Exit 
[7/5/19, 15:05:07:422 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > performHealthCheck Entry  
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletRequest40@5b2a577a
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletResponse40@49b327f1
[7/5/19, 15:05:07:422 CST] 0000001e id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > getAppNames Entry 
[7/5/19, 15:05:07:422 CST] 0000001e id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < getAppNames Exit  
                                                                                                               [getting-started]
[7/5/19, 15:05:07:465 CST] 0000001e id=00000000 .microprofile.health.internal.HealthCheckHttpResponseBuilder > <init> Entry 
[7/5/19, 15:05:07:468 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < <init> Exit  
                                                                                                               com.ibm.ws.microprofile.health.internal.HealthCheckHttpResponseBuilder@457956f3
[7/5/19, 15:05:07:468 CST] 0000001e id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > getModuleNames Entry  
                                                                                                               getting-started
[7/5/19, 15:05:07:468 CST] 0000001e id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < getModuleNames Exit  
                                                                                                               [getting-started.war]
[7/5/19, 15:05:07:468 CST] 0000001e id=00000000 m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl 3 In performHealthCheck(): appName = getting-started, moduleName = getting-started.war
[7/5/19, 15:05:07:468 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl > runHealthChecks ENTRY getting-started getting-started.war
[7/5/19, 15:05:07:468 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > createContextualProxy Entry  
                                                                                                               {javax.enterprise.concurrent.IDENTITY_NAME=mp.healthcheck.proxy, com.ibm.ws.concurrent.TASK_OWNER=mp.healthcheck.runtime}
                                                                                                               getting-started#getting-started.war
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl@1070d1bb
                                                                                                               interface com.ibm.ws.microprofile.health.services.HealthCheckCDIBeanInvoker
[7/5/19, 15:05:07:468 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > createThreadContext Entry  
                                                                                                               {javax.enterprise.concurrent.IDENTITY_NAME=mp.healthcheck.proxy, com.ibm.ws.concurrent.TASK_OWNER=mp.healthcheck.runtime}
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:07:468 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > getContextClassLoaderIdentifier Entry  
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:07:468 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > getComponentType Entry  
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:07:508 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              > isEmpty Entry  
                                                                                                               null
[7/5/19, 15:05:07:508 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              < isEmpty Exit  
                                                                                                               true
[7/5/19, 15:05:07:508 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < getComponentType Exit  
                                                                                                               WEB
[7/5/19, 15:05:07:509 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              > isEmpty Entry  
                                                                                                               WebModule:getting-started#getting-started.war
[7/5/19, 15:05:07:509 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              < isEmpty Exit  
                                                                                                               false
[7/5/19, 15:05:07:510 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < getContextClassLoaderIdentifier Exit  
                                                                                                               WebModule:getting-started#getting-started.war
[7/5/19, 15:05:07:511 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > getMetaDataIdentifier Entry  
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:07:511 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService > getComponentType Entry  
                                                                                                               getting-started#getting-started.war
[7/5/19, 15:05:07:512 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              > isEmpty Entry  
                                                                                                               null
[7/5/19, 15:05:07:512 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.util.StringUtils              < isEmpty Exit  
                                                                                                               true
[7/5/19, 15:05:07:512 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < getComponentType Exit  
                                                                                                               WEB
[7/5/19, 15:05:07:512 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < getMetaDataIdentifier Exit  
                                                                                                               WEB#getting-started#getting-started.war
[7/5/19, 15:05:07:521 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < createThreadContext Exit  
                                                                                                               ThreadContextDescriptorImpl@8378443[com.ibm.ws.javaee.metadata.context.provider, com.ibm.ws.security.context.provider, com.ibm.ws.classloader.context.provider, com.ibm.ws.transaction.context.provider]
[7/5/19, 15:05:07:524 CST] 0000001e id=359ea415 ws.microprofile.health.services.impl.AppModuleContextService < createContextualProxy Exit  
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl@1070d1bb
[7/5/19, 15:05:07:528 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl > checkAllBeans Entry 
[7/5/19, 15:05:07:528 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl > getHealthCheckBeans Entry 
[7/5/19, 15:05:07:608 CST] 0000001e id=00000000 profile.health.services.impl.HealthCheckCDIBeanInvokerImpl$1 > <init> Entry  
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl@1070d1bb
[7/5/19, 15:05:07:608 CST] 0000001e id=4a780913 profile.health.services.impl.HealthCheckCDIBeanInvokerImpl$1 < <init> Exit  
                                                                                                               @org.eclipse.microprofile.health.Health()
[7/5/19, 15:05:07:609 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl 1 Bean Found: HealthCheck beanClass = class io.openliberty.sample.system.SystemHealth, class = class org.jboss.weld.bean.ManagedBean, name = null
[7/5/19, 15:05:07:613 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl < getHealthCheckBeans Exit  
                                                                                                               [io.openliberty.sample.system.SystemHealth@55ffcd4c]
[7/5/19, 15:05:07:615 CST] 0000001e id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl > createResponseBuilder Entry 
[7/5/19, 15:05:07:657 CST] 0000001e id=00000000 m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > <init> Entry 
[7/5/19, 15:05:07:658 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < <init> Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = null
	state = null
	data = Optional[{}]
[7/5/19, 15:05:07:658 CST] 0000001e id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl < createResponseBuilder Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = null
	state = null
	data = Optional[{}]
[7/5/19, 15:05:07:658 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > name Entry  
                                                                                                               SystemResource
[7/5/19, 15:05:07:658 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > validateName Entry  
                                                                                                               SystemResource
[7/5/19, 15:05:07:659 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < validateName Exit 
[7/5/19, 15:05:07:659 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < name Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = SystemResource
	state = null
	data = Optional[{}]
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > withData Entry  
                                                                                                               services
                                                                                                               available
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > withData Entry  
                                                                                                               services
                                                                                                               available
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > validateKey Entry  
                                                                                                               services
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < validateKey Exit 
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < withData Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = SystemResource
	state = null
	data = Optional[{services=available}]
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < withData Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = SystemResource
	state = null
	data = Optional[{services=available}]
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > up Entry 
[7/5/19, 15:05:07:666 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < up Exit  
                                                                                                               HealthCheckResponseBuilder: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]
[7/5/19, 15:05:07:667 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl > build Entry 
[7/5/19, 15:05:07:708 CST] 0000001e id=00000000 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  > <init> Entry  
                                                                                                               SystemResource
                                                                                                               UP
                                                                                                               Optional[{services=available}]
[7/5/19, 15:05:07:709 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  < <init> Exit  
                                                                                                               HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]
[7/5/19, 15:05:07:709 CST] 0000001e id=339c956f m.ws.microprofile.health.impl.HealthCheckResponseBuilderImpl < build Exit  
                                                                                                               HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]
[7/5/19, 15:05:07:709 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl 1 HealthCheck beanClass: class io.openliberty.sample.system.SystemHealth$Proxy$_$$_WeldClientProxy called
[7/5/19, 15:05:07:709 CST] 0000001e id=00000000 roprofile.health.services.impl.HealthCheckCDIBeanInvokerImpl < checkAllBeans Exit  
                                                                                                               [HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]]
[7/5/19, 15:05:07:714 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  > getState Entry 
[7/5/19, 15:05:07:714 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  < getState Exit  
                                                                                                               UP
[7/5/19, 15:05:07:714 CST] 0000001e id=00000000 .ibm.ws.microprofile.health.services.impl.HealthExecutorImpl < runHealthChecks RETURN [HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]]
[7/5/19, 15:05:07:715 CST] 0000001e id=00000000 m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl 3 In performHealthCheck(): hcResponses = [HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]]
[7/5/19, 15:05:07:715 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder > addResponses Entry  
                                                                                                               [HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]]
[7/5/19, 15:05:07:715 CST] 0000001e id=00000000 .microprofile.health.internal.HealthCheckHttpResponseBuilder 3 addResponsek(): hcResponse = HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]
[7/5/19, 15:05:07:715 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder > setChecks Entry  
                                                                                                               HealthCheckResponse: 
	name = SystemResource
	state = UP
	data = Optional[{services=available}]
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  > getName Entry 
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  < getName Exit  
                                                                                                               SystemResource
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  > getState Entry 
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  < getState Exit  
                                                                                                               UP
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  > getData Entry 
[7/5/19, 15:05:07:715 CST] 0000001e id=160eeea9 com.ibm.ws.microprofile.health.impl.HealthCheckResponseImpl  < getData Exit  
                                                                                                               Optional[{services=available}]
[7/5/19, 15:05:07:715 CST] 0000001e id=00000000 .microprofile.health.internal.HealthCheckHttpResponseBuilder 3 setChecks(): checks = [{data={services=available}, name=SystemResource, state=UP}]
[7/5/19, 15:05:07:715 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < setChecks Exit 
[7/5/19, 15:05:07:716 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < addResponses Exit 
[7/5/19, 15:05:07:716 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder > setHttpResponse Entry  
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletResponse40@49b327f1
[7/5/19, 15:05:07:716 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder > setJSONPayload Entry  
                                                                                                               {checks=[Ljava.lang.Object;@e90a0f1, outcome=UP}
                                                                                                               com.ibm.ws.webcontainer40.srt.SRTServletResponse40@49b327f1
[7/5/19, 15:05:07:716 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder > getJSON Entry 
[7/5/19, 15:05:07:806 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < getJSON Exit  
                                                                                                               com.ibm.ws.jsonsupport.internal.JSONJacksonImpl@2b40b21d
[7/5/19, 15:05:07:823 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < setJSONPayload Exit 
[7/5/19, 15:05:07:823 CST] 0000001e id=457956f3 .microprofile.health.internal.HealthCheckHttpResponseBuilder < setHttpResponse Exit 
[7/5/19, 15:05:07:823 CST] 0000001e id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < performHealthCheck Exit 
[7/5/19, 15:05:07:823 CST] 0000001e id=773ac4d2 m.ws.microprofile.health.internal.servlet.HealthCheckServlet < service Exit 
[7/5/19, 15:05:08:442 CST] 00000013 id=00000000 com.ibm.ws.kernel.launch.internal.ServerCommandListener      A CWWKE0055I: Server shutdown requested on Friday, July 5, 2019 at 3:05 PM. The server GettingStartedServer is shutting down.
[7/5/19, 15:05:08:446 CST] 00000050 id=00000000 com.ibm.ws.runtime.update.internal.RuntimeUpdateManagerImpl  A CWWKE1100I: Waiting for up to 30 seconds for the server to quiesce.
[7/5/19, 15:05:08:453 CST] 0000004b id=00000000 com.ibm.ws.tcpchannel.internal.TCPChannel                    I CWWKO0220I: TCP Channel defaultHttpEndpoint-ssl has stopped listening for requests on host *  (IPv6) port 9443.
[7/5/19, 15:05:08:456 CST] 0000004b id=00000000 com.ibm.ws.tcpchannel.internal.TCPChannel                    I CWWKO0220I: TCP Channel defaultHttpEndpoint has stopped listening for requests on host *  (IPv6) port 9080.
[7/5/19, 15:05:08:456 CST] 0000004b id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0017I: Web application removed (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/metrics/
[7/5/19, 15:05:08:457 CST] 0000004b id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0017I: Web application removed (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/health/
[7/5/19, 15:05:08:457 CST] 0000004b id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0017I: Web application removed (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/
[7/5/19, 15:05:08:457 CST] 0000004b id=00000000 com.ibm.ws.http.internal.VirtualHostImpl                     A CWWKT0017I: Web application removed (default_host): http://yunfanchens-mbp.cn.ibm.com:9080/ibm/api/
[7/5/19, 15:05:09:463 CST] 00000050 id=00000000 com.ibm.ws.runtime.update.internal.RuntimeUpdateManagerImpl  I CWWKE1101I: Server quiesce complete.
[7/5/19, 15:05:09:494 CST] 0000004c id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I doDestroy SRVE0253I: [getting-started] [/] [io.openliberty.sample.system.SystemApplication]: Destroy successful.
[7/5/19, 15:05:09:497 CST] 0000004c id=6384d557 icroprofile.health.internal.AppTrackerServletContextListener > contextDestroyed Entry  
                                                                                                               javax.servlet.ServletContextEvent[source=com.ibm.ws.webcontainer40.facade.ServletContextFacade40@622127bf]
[7/5/19, 15:05:09:497 CST] 0000004c id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > moduleStopped Entry  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl$AppModuleName@8114f5
[7/5/19, 15:05:09:497 CST] 0000004c id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < moduleStopped Exit 
[7/5/19, 15:05:09:497 CST] 0000004c id=6384d557 icroprofile.health.internal.AppTrackerServletContextListener < contextDestroyed Exit 
[7/5/19, 15:05:09:509 CST] 0000004c id=00000000 com.ibm.ws.app.manager.AppMessageHelper                      A CWWKZ0009I: The application getting-started has stopped successfully.
[7/5/19, 15:05:09:526 CST] 00000050 id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I doDestroy SRVE0253I: [com.ibm.ws.microprofile.metrics.private] [/metrics] [PrivateMetricsRESTProxyServlet]: Destroy successful.
[7/5/19, 15:05:09:533 CST] 00000050 id=00000000 com.ibm.ws.webcontainer.servlet.ServletWrapper               I doDestroy SRVE0253I: [com.ibm.ws.microprofile.health] [/health] [HealthCheckServlet]: Destroy successful.
[7/5/19, 15:05:09:654 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > deactivate Entry  
                                                                                                               org.apache.felix.scr.impl.manager.ComponentContextImpl@3d4df2df
                                                                                                               0
[7/5/19, 15:05:09:654 CST] 00000050 id=00000000 m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl 3 HealthCheckServiceImpl is deactivated
[7/5/19, 15:05:09:654 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < deactivate Exit 
[7/5/19, 15:05:09:655 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > unsetHealthExecutor Entry  
                                                                                                               com.ibm.ws.microprofile.health.services.impl.HealthExecutorImpl@191a7028
[7/5/19, 15:05:09:655 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < unsetHealthExecutor Exit 
[7/5/19, 15:05:09:655 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl > unsetAppTracker Entry  
                                                                                                               com.ibm.ws.microprofile.health.internal.AppTrackerImpl@78c080d5
[7/5/19, 15:05:09:655 CST] 00000050 id=3a820cad m.ibm.ws.microprofile.health.internal.HealthCheckServiceImpl < unsetAppTracker Exit 
[7/5/19, 15:05:09:655 CST] 00000050 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       > deactivate Entry  
                                                                                                               org.apache.felix.scr.impl.manager.ComponentContextImpl@69b39c74
                                                                                                               0
[7/5/19, 15:05:09:655 CST] 00000050 id=00000000 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       3 AppTrackerImpl is deactivated
[7/5/19, 15:05:09:655 CST] 00000050 id=78c080d5 com.ibm.ws.microprofile.health.internal.AppTrackerImpl       < deactivate Exit 
[7/5/19, 15:05:09:657 CST] 00000050 id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl > deactivate Entry 
[7/5/19, 15:05:09:657 CST] 00000050 id=377a2d05 microprofile.health.spi.impl.HealthCheckResponseProviderImpl < deactivate Exit 
[7/5/19, 15:05:09:672 CST] 00000050 id=00000000 ibm.ws.security.authentication.internal.jaas.JAASServiceImpl I CWWKS1124I: The collective authentication plugin with class name NullCollectiveAuthenticationPlugin has been deactivated. 
[7/5/19, 15:05:09:730 CST] 00000050 id=00000000 com.ibm.ws.security.ready.internal.SecurityReadyServiceImpl  I CWWKS0009I: The security service has stopped.
[7/5/19, 15:05:09:902 CST] 00000001 id=00000000 com.ibm.ws.kernel.launch.internal.FrameworkManager           A CWWKE0036I: The server GettingStartedServer stopped after 13.487 seconds.
